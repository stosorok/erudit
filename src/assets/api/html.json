{
    "htmlallcollection-length": "Returns the number of elements in the collection.",
    "htmlallcollection-item": "Returns the item with index index from the collection (determined by tree order).",
    "htmlallcollection-nameditem": "Returns the item with ID or name name from the collection.\n\nIf there are multiple matching items, then an HTMLCollection object containing all those elements is returned.\n\nOnly button, form, iframe, input, map, meta, object, select, and textarea elements can have a name for the purpose of this method; their name is given by the value of their name attribute.",
    "htmlcollection-length": "Returns the number of elements in the collection.",
    "htmlcollection-item": "Returns the item with index index from the collection. The items are sorted in tree order.",
    "htmlformcontrolscollection-nameditem": "Returns the item with ID or name name from the collection.\n\nIf there are multiple matching items, then a RadioNodeList object containing all those elements is returned.",
    "htmloptionscollection-length": "Returns the number of elements in the collection.\n\nWhen set to a smaller number, truncates the number of option elements in the corresponding container.\n\nWhen set to a greater number, adds new blank option elements to that container.",
    "htmlcollection-nameditem": "Returns the item with ID or name name from the collection.\n\nIf there are multiple matching items, then the first is returned.",
    "htmloptionscollection-add": "Inserts element before the node given by before.\n\nThe before argument can be a number, in which case element is inserted before the item with that number, or an element from the collection, in which case element is inserted before that element.\n\nIf before is omitted, null, or a number out of range, then element will be added at the end of the list.\n\nThis method will throw a \"HierarchyRequestError\" DOMException if element is an ancestor of the element into which it is to be inserted.",
    "htmloptionscollection-remove": "Removes the item with index index from the collection.",
    "htmloptionscollection-selectedindex": "Returns the index of the first selected item, if any, or âˆ’1 if there is no selected item.\n\nCan be set, to change the selection.",
    "domstringlist-length": "Returns the number of strings in strings.",
    "domstringlist-item": "Returns the string with index index from strings.",
    "domstringlist-contains": "Returns true if strings contains string, and false otherwise.",
    "document-referrer": "Returns the URL of the Document from which the user navigated to this one, unless it was blocked or there was no such document, in which case it returns the empty string.\n\nThe noreferrer link type can be used to block the referrer.",
    "document-cookie": "Returns the HTTP cookies that apply to the Document. If there are no cookies or cookies can't be applied to this resource, the empty string will be returned.\n\nCan be set, to add a new cookie to the element's set of HTTP cookies.\n\nIf the contents are sandboxed into a unique origin (e.g. in an iframe with the sandbox attribute), a \"SecurityError\" DOMException will be thrown on getting and setting.",
    "document-lastmodified": "Returns the date of the last modification to the document, as reported by the server, in the form \"MM/DD/YYYY hh:mm:ss\", in the user's local time zone.\n\nIf the last modification date is not known, the current time is returned instead.",
    "document-readystate": "Returns \"loading\" while the Document is loading, \"interactive\" once it is finished parsing but still loading subresources, and \"complete\" once it has loaded.\n\nThe readystatechange event fires on the Document object when this value changes.\n\nThe DOMContentLoaded event fires after the transition to \"interactive\" but before the transition to \"complete\", at the point where all subresources apart from async script elements have loaded.",
    "document-head": "Returns the head element.",
    "document-body": "Returns the body element.\n\nCan be set, to replace the body element.\n\nIf the new value is not a body or frameset element, this will throw a \"HierarchyRequestError\" DOMException.",
    "document-images": "Returns an HTMLCollection of the img elements in the Document.",
    "document-embeds": "Return an HTMLCollection of the embed elements in the Document.",
    "document-plugins": "Return an HTMLCollection of the embed elements in the Document.",
    "document-links": "Returns an HTMLCollection of the a and area elements in the Document that have href attributes.",
    "document-forms": "Return an HTMLCollection of the form elements in the Document.",
    "document-scripts": "Return an HTMLCollection of the script elements in the Document.",
    "document-getelementsbyname": "Returns a NodeList of elements in the Document that have a name attribute with the value name.",
    "document-currentscript": "Returns the script element, or the SVG script element, that is currently executing, as long as the element represents a classic script. In the case of reentrant script execution, returns the one that most recently started executing amongst those that have not yet finished executing.\n\nReturns null if the Document is not currently executing a script or SVG script element (e.g., because the running script is an event handler, or a timeout), or if the currently executing script or SVG script element represents a module script.",
    "dir": "Returns the html element's dir attribute's value, if any.\n\nCan be set, to either \"ltr\", \"rtl\", or \"auto\" to replace the html element's dir attribute's value.\n\nIf there is no html element, returns the empty string and ignores new values.",
    "elementcssinlinestyle-style": "Returns a CSSStyleDeclaration object for the element's style attribute.",
    "dataset": "Returns a DOMStringMap object for the element's data-* attributes.\n\nHyphenated names become camel-cased. For example, data-foo-bar=\"\" becomes element.dataset.fooBar.",
    "innertext": "Returns the element's text content \"as rendered\".\n\nCan be set, to replace the element's children with the given value, but with line breaks converted to br elements.",
    "htmltitleelement-text": "Returns the child text content of the element.\n\nCan be set, to replace the element's children with the given value.",
    "htmlanchorelement-text": "Same as textContent.",
    "htmlhyperlinkelementutils-href": "Returns the hyperlink's URL.\n\nCan be set, to change the URL.",
    "htmlhyperlinkelementutils-origin": "Returns the hyperlink's URL's origin.",
    "htmlhyperlinkelementutils-protocol": "Returns the hyperlink's URL's scheme.\n\nCan be set, to change the URL's scheme.",
    "htmlhyperlinkelementutils-username": "Returns the hyperlink's URL's username.\n\nCan be set, to change the URL's username.",
    "htmlhyperlinkelementutils-password": "Returns the hyperlink's URL's password.\n\nCan be set, to change the URL's password.",
    "htmlhyperlinkelementutils-host": "Returns the hyperlink's URL's host and port (if different from the default port for the scheme).\n\nCan be set, to change the URL's host and port.",
    "htmlhyperlinkelementutils-hostname": "Returns the hyperlink's URL's host.\n\nCan be set, to change the URL's host.",
    "htmlhyperlinkelementutils-port": "Returns the hyperlink's URL's port.\n\nCan be set, to change the URL's port.",
    "htmlhyperlinkelementutils-pathname": "Returns the hyperlink's URL's path.\n\nCan be set, to change the URL's path.",
    "htmlhyperlinkelementutils-search": "Returns the hyperlink's URL's query (includes leading \"?\" if non-empty).\n\nCan be set, to change the URL's query (ignores leading \"?\").",
    "htmlhyperlinkelementutils-hash": "Returns the hyperlink's URL's fragment (includes leading \"#\" if non-empty).\n\nCan be set, to change the URL's fragment (ignores leading \"#\").",
    "img-width": "These attributes return the actual rendered dimensions of the image, or zero if the dimensions are not known.\n\nThey can be set, to change the corresponding content attributes.",
    "img-height": "These attributes return the actual rendered dimensions of the image, or zero if the dimensions are not known.\n\nThey can be set, to change the corresponding content attributes.",
    "img-naturalwidth": "These attributes return the intrinsic dimensions of the image, or zero if the dimensions are not known.",
    "img-naturalheight": "These attributes return the intrinsic dimensions of the image, or zero if the dimensions are not known.",
    "img-complete": "Returns true if the image has been completely downloaded or if no image is specified; otherwise, returns false.",
    "img-currentsrc": "Returns the image's absolute URL.",
    "img-decode": "This method causes the user agent to decode the image in parallel, returning a promise that fulfills when decoding is complete.\n\nThe promise will be rejected with an \"EncodingError\" DOMException if the image cannot be decoded.",
    "image": "Returns a new img element, with the width and height attributes set to the values passed in the relevant arguments, if applicable.",
    "video-videowidth": "These attributes return the intrinsic dimensions of the video, or zero if the dimensions are not known.",
    "video-videoheight": "These attributes return the intrinsic dimensions of the video, or zero if the dimensions are not known.",
    "audio": "Returns a new audio element, with the src attribute set to the value passed in the argument, if applicable.",
    "track-readystate": "Returns the text track readiness state, represented by a number from the following list:",
    "htmltrackelement-track": "Returns the TextTrack object corresponding to the text track of the track element.",
    "htmlmediaelement-error": "Returns a MediaError object representing the current error state of the element.\n\nReturns null if there is no error.",
    "media-srcobject": "Allows the media element to be assigned a media provider object.",
    "media-currentsrc": "Returns the URL of the current media resource, if any.\n\nReturns the empty string when there is no media resource, or it doesn't have a URL.",
    "navigator-canplaytype": "Returns the empty string (a negative response), \"maybe\", or \"probably\" based on how confident the user agent is that it can play media resources of the given type.",
    "media-networkstate": "Returns the current state of network activity for the element, from the codes in the list below.",
    "htmlmediaelement-load": "Causes the element to reset and start selecting and loading a new media resource from scratch.",
    "htmlmediaelement-buffered": "Returns a TimeRanges object that represents the ranges of the media resource that the user agent has buffered.",
    "htmlmediaelement-duration": "Returns the length of the media resource, in seconds, assuming that the start of the media resource is at time zero.\n\nReturns NaN if the duration isn't available.\n\nReturns Infinity for unbounded streams.",
    "media-currenttime": "Returns the official playback position, in seconds.\n\nCan be set, to seek to the given time.",
    "media-readystate": "Returns a value that expresses the current state of the element with respect to rendering the current playback position, from the codes in the list below.",
    "htmlmediaelement-paused": "Returns true if playback is paused; false otherwise.",
    "htmlmediaelement-ended": "Returns true if playback has reached the end of the media resource.",
    "media-defaultplaybackrate": "Returns the default rate of playback, for when the user is not fast-forwarding or reversing through the media resource.\n\nCan be set, to change the default rate of playback.\n\nThe default rate has no direct effect on playback, but if the user switches to a fast-forward mode, when they return to the normal playback mode, it is expected that the rate of playback will be returned to the default rate of playback.",
    "media-playbackrate": "Returns the current rate playback, where 1.0 is normal speed.\n\nCan be set, to change the rate of playback.",
    "media-preservespitch": "Returns true if pitch-preserving algorithms are used when the playbackRate is not 1.0. The default value is true.\n\nCan be set to false to have the media resource's audio pitch change up or down depending on the playbackRate. This is useful for aesthetic and performance reasons.",
    "htmlmediaelement-played": "Returns a TimeRanges object that represents the ranges of the media resource that the user agent has played.",
    "htmlmediaelement-play": "Sets the paused attribute to false, loading the media resource and beginning playback if necessary. If the playback had ended, will restart it from the start.",
    "htmlmediaelement-pause": "Sets the paused attribute to true, loading the media resource if necessary.",
    "htmlmediaelement-seeking": "Returns true if the user agent is currently seeking.",
    "htmlmediaelement-seekable": "Returns a TimeRanges object that represents the ranges of the media resource to which it is possible for the user agent to seek.",
    "media-fastseek": "Seeks to near the given time as fast as possible, trading precision for speed. (To seek to a precise time, use the currentTime attribute.)\n\nThis does nothing if the media resource has not been loaded.",
    "media-audiotracks": "Returns an AudioTrackList object representing the audio tracks available in the media resource.",
    "media-videotracks": "Returns a VideoTrackList object representing the video tracks available in the media resource.",
    "audiotrack-id": "Returns the ID of the given track. This is the ID that can be used with a fragment if the format supports media fragment syntax, and that can be used with the getTrackById() method.",
    "videotrack-id": "Returns the ID of the given track. This is the ID that can be used with a fragment if the format supports media fragment syntax, and that can be used with the getTrackById() method.",
    "audiotrack-kind": "Returns the category the given track falls into. The possible track categories are given below.",
    "videotrack-kind": "Returns the category the given track falls into. The possible track categories are given below.",
    "audiotrack-label": "Returns the label of the given track, if known, or the empty string otherwise.",
    "videotrack-label": "Returns the label of the given track, if known, or the empty string otherwise.",
    "audiotrack-language": "Returns the language of the given track, if known, or the empty string otherwise.",
    "videotrack-language": "Returns the language of the given track, if known, or the empty string otherwise.",
    "audiotrack-enabled": "Returns true if the given track is active, and false otherwise.\n\nCan be set, to change whether the track is enabled or not. If multiple audio tracks are enabled simultaneously, they are mixed.",
    "videotrack-selected": "Returns true if the given track is active, and false otherwise.\n\nCan be set, to change whether the track is selected or not. Either zero or one video track is selected; selecting a new track while a previous one is selected will unselect the previous one.",
    "media-texttracks": "Returns the number of text tracks associated with the media element (e.g. from track elements). This is the number of text tracks in the media element's list of text tracks.",
    "media-addtexttrack": "Creates and returns a new TextTrack object, which is also added to the media element's list of text tracks.",
    "texttrack-kind": "Returns the text track kind string.",
    "texttrack-label": "Returns the text track label, if there is one, or the empty string otherwise (indicating that a custom label probably needs to be generated from the other attributes of the object if the object is exposed to the user).",
    "texttrack-language": "Returns the text track language string.",
    "texttrack-id": "Returns the ID of the given track.\n\nFor in-band tracks, this is the ID that can be used with a fragment if the format supports media fragment syntax, and that can be used with the getTrackById() method.\n\nFor TextTrack objects corresponding to track elements, this is the ID of the track element.",
    "texttrack-inbandmetadatatrackdispatchtype": "Returns the text track in-band metadata track dispatch type string.",
    "texttrack-mode": "Returns the text track mode, represented by a string from the following list:\n\nCan be set, to change the mode.",
    "texttrack-cues": "Returns the text track list of cues, as a TextTrackCueList object.",
    "texttrack-activecues": "Returns the text track cues from the text track list of cues that are currently active (i.e. that start before the current playback position and end after it), as a TextTrackCueList object.",
    "texttrack-addcue": "Adds the given cue to textTrack's text track list of cues.",
    "texttrack-removecue": "Removes the given cue from textTrack's text track list of cues.",
    "texttrackcuelist-length": "Returns the number of cues in the list.",
    "texttrackcuelist-getcuebyid": "Returns the first text track cue (in text track cue order) with text track cue identifier id.\n\nReturns null if none of the cues have the given identifier or if the argument is the empty string.",
    "texttrackcue-track": "Returns the TextTrack object to which this text track cue belongs, if any, or null otherwise.",
    "texttrackcue-id": "Returns the text track cue identifier.\n\nCan be set.",
    "texttrackcue-starttime": "Returns the text track cue start time, in seconds.\n\nCan be set.",
    "texttrackcue-endtime": "Returns the text track cue end time, in seconds.\n\nCan be set.",
    "texttrackcue-pauseonexit": "Returns true if the text track cue pause-on-exit flag is set, false otherwise.\n\nCan be set.",
    "htmlmediaelement-volume": "Returns the current playback volume, as a number in the range 0.0 to 1.0, where 0.0 is the quietest and 1.0 the loudest.\n\nCan be set, to change the volume.\n\nThrows an \"IndexSizeError\" DOMException if the new value is not in the range 0.0 .. 1.0.",
    "htmlmediaelement-muted": "Returns true if audio is muted, overriding the volume attribute, and false if the volume attribute is being honored.\n\nCan be set, to change whether the audio is muted or not.",
    "timeranges-length": "Returns the number of ranges in the object.",
    "timeranges-start": "Returns the time for the start of the range with the given index.\n\nThrows an \"IndexSizeError\" DOMException if the index is out of range.",
    "timeranges-end": "Returns the time for the end of the range with the given index.\n\nThrows an \"IndexSizeError\" DOMException if the index is out of range.",
    "trackevent-track": "Returns the track object (TextTrack, AudioTrack, or VideoTrack) to which the event relates.",
    "htmlmapelement-areas": "Returns an HTMLCollection of the area elements in the map.",
    "media-getsvgdocument": "Returns the Document object, in the case of iframe, embed, or object elements being used to embed SVG.",
    "htmltableelement-caption": "Returns the table's caption element.\n\nCan be set, to replace the caption element.",
    "table-createcaption": "Ensures the table has a caption element, and returns it.",
    "table-deletecaption": "Ensures the table does not have a caption element.",
    "table-thead": "Returns the table's thead element.\n\nCan be set, to replace the thead element. If the new value is not a thead element, throws a \"HierarchyRequestError\" DOMException.",
    "table-createthead": "Ensures the table has a thead element, and returns it.",
    "table-deletethead": "Ensures the table does not have a thead element.",
    "table-tfoot": "Returns the table's tfoot element.\n\nCan be set, to replace the tfoot element. If the new value is not a tfoot element, throws a \"HierarchyRequestError\" DOMException.",
    "table-createtfoot": "Ensures the table has a tfoot element, and returns it.",
    "table-deletetfoot": "Ensures the table does not have a tfoot element.",
    "table-tbodies": "Returns an HTMLCollection of the tbody elements of the table.",
    "table-createtbody": "Creates a tbody element, inserts it into the table, and returns it.",
    "htmltableelement-rows": "Returns an HTMLCollection of the tr elements of the table.",
    "table-insertrow": "Creates a tr element, along with a tbody if required, inserts them into the table at the position given by the argument, and returns the tr.\n\nThe position is relative to the rows in the table. The index âˆ’1, which is the default if the argument is omitted, is equivalent to inserting at the end of the table.\n\nIf the given position is less than âˆ’1 or greater than the number of rows, throws an \"IndexSizeError\" DOMException.",
    "table-deleterow": "Removes the tr element with the given position in the table.\n\nThe position is relative to the rows in the table. The index âˆ’1 is equivalent to deleting the last row of the table.\n\nIf the given position is less than âˆ’1 or greater than the index of the last row, or if there are no rows, throws an \"IndexSizeError\" DOMException.",
    "htmltablesectionelement-rows": "Returns an HTMLCollection of the tr elements of the table section.",
    "tbody-insertrow": "Creates a tr element, inserts it into the table section at the position given by the argument, and returns the tr.\n\nThe position is relative to the rows in the table section. The index âˆ’1, which is the default if the argument is omitted, is equivalent to inserting at the end of the table section.\n\nIf the given position is less than âˆ’1 or greater than the number of rows, throws an \"IndexSizeError\" DOMException.",
    "tbody-deleterow": "Removes the tr element with the given position in the table section.\n\nThe position is relative to the rows in the table section. The index âˆ’1 is equivalent to deleting the last row of the table section.\n\nIf the given position is less than âˆ’1 or greater than the index of the last row, or if there are no rows, throws an \"IndexSizeError\" DOMException.",
    "tr-rowindex": "Returns the position of the row in the table's rows list.\n\nReturns âˆ’1 if the element isn't in a table.",
    "tr-sectionrowindex": "Returns the position of the row in the table section's rows list.\n\nReturns âˆ’1 if the element isn't in a table section.",
    "htmltablerowelement-cells": "Returns an HTMLCollection of the td and th elements of the row.",
    "tr-insertcell": "Creates a td element, inserts it into the table row at the position given by the argument, and returns the td.\n\nThe position is relative to the cells in the row. The index âˆ’1, which is the default if the argument is omitted, is equivalent to inserting at the end of the row.\n\nIf the given position is less than âˆ’1 or greater than the number of cells, throws an \"IndexSizeError\" DOMException.",
    "tr-deletecell": "Removes the td or th element with the given position in the row.\n\nThe position is relative to the cells in the row. The index âˆ’1 is equivalent to deleting the last cell of the row.\n\nIf the given position is less than âˆ’1 or greater than the index of the last cell, or if there are no cells, throws an \"IndexSizeError\" DOMException.",
    "tdth-cellindex": "Returns the position of the cell in the row's cells list. This does not necessarily correspond to the x-position of the cell in the table, since earlier cells might cover multiple rows or columns.\n\nReturns âˆ’1 if the element isn't in a row.",
    "htmlformelement-elements": "Returns an HTMLFormControlsCollection of the form controls in the form (excluding image buttons for historical reasons).",
    "htmlformelement-length": "Returns the number of form controls in the form (excluding image buttons for historical reasons).",
    "htmlformelement-submit": "Submits the form, bypassing interactive constraint validation and without firing a submit event.",
    "form-requestsubmit": "Requests to submit the form. Unlike submit(), this method includes interactive constraint validation and firing a submit event, either of which can cancel submission.\n\nThe submitter argument can be used to point to a specific submit button, whose formaction, formenctype, formmethod, formnovalidate, and formtarget attributes can impact submission. Additionally, the submitter will be included when constructing the entry list for submission; normally, buttons are excluded.",
    "htmlformelement-reset": "Resets the form.",
    "form-checkvalidity": "Returns true if the form's controls are all valid; otherwise, returns false.",
    "form-reportvalidity": "Returns true if the form's controls are all valid; otherwise, returns false and informs the user.",
    "htmllabelelement-control": "Returns the form control that is associated with this element.",
    "htmllabelelement-form": "Returns the form owner of the form control that is associated with this element.\n\nReturns null if there isn't one.",
    "lfe-labels": "Returns a NodeList of all the label elements that the form control is associated with.",
    "htmlinputelement-indeterminate": "When set, overrides the rendering of checkbox controls so that the current value is not visible.",
    "htmlinputelement-width": "These attributes return the actual rendered dimensions of the image, or zero if the dimensions are not known.\n\nThey can be set, to change the corresponding content attributes.",
    "input-height": "These attributes return the actual rendered dimensions of the image, or zero if the dimensions are not known.\n\nThey can be set, to change the corresponding content attributes.",
    "htmlinputelement-value": "Returns the current value of the form control.\n\nCan be set, to change the value.\n\nThrows an \"InvalidStateError\" DOMException if it is set to any value other than the empty string when the control is a file upload control.",
    "htmlinputelement-checked": "Returns the current checkedness of the form control.\n\nCan be set, to change the checkedness.",
    "htmlinputelement-files": "Returns a FileList object listing the selected files of the form control.\n\nReturns null if the control isn't a file control.\n\nCan be set to a FileList object to change the selected files of the form control. For instance, as the result of a drag-and-drop operation.",
    "input-valueasdate": "Returns a Date object representing the form control's value, if applicable; otherwise, returns null.\n\nCan be set, to change the value.\n\nThrows an \"InvalidStateError\" DOMException if the control isn't date- or time-based.",
    "input-valueasnumber": "Returns a number representing the form control's value, if applicable; otherwise, returns NaN.\n\nCan be set, to change the value. Setting this to NaN will set the underlying value to the empty string.\n\nThrows an \"InvalidStateError\" DOMException if the control is neither date- or time-based nor numeric.",
    "input-stepup": "Changes the form control's value by the value given in the step attribute, multiplied by n. The default value for n is 1.\n\nThrows \"InvalidStateError\" DOMException if the control is neither date- or time-based nor numeric, or if the step attribute's value is \"any\".",
    "input-stepdown": "Changes the form control's value by the value given in the step attribute, multiplied by n. The default value for n is 1.\n\nThrows \"InvalidStateError\" DOMException if the control is neither date- or time-based nor numeric, or if the step attribute's value is \"any\".",
    "htmlinputelement-list": "Returns the datalist element indicated by the list attribute.",
    "htmlselectelement-type": "Returns \"select-multiple\" if the element has a multiple attribute, and \"select-one\" otherwise.",
    "htmlselectelement-options": "Returns an HTMLOptionsCollection of the list of options.",
    "htmlselectelement-length": "Returns the number of elements in the list of options.\n\nWhen set to a smaller number, truncates the number of option elements in the select.\n\nWhen set to a greater number, adds new blank option elements to the select.",
    "htmlselectelement-item": "Returns the item with index index from the list of options. The items are sorted in tree order.",
    "select-nameditem": "Returns the first item with ID or name name from the list of options.\n\nReturns null if no element with that ID could be found.",
    "htmlselectelement-add": "Inserts element before the node given by before.\n\nThe before argument can be a number, in which case element is inserted before the item with that number, or an element from the list of options, in which case element is inserted before that element.\n\nIf before is omitted, null, or a number out of range, then element will be added at the end of the list.\n\nThis method will throw a \"HierarchyRequestError\" DOMException if element is an ancestor of the element into which it is to be inserted.",
    "select-selectedoptions": "Returns an HTMLCollection of the list of options that are selected.",
    "select-selectedindex": "Returns the index of the first selected item, if any, or âˆ’1 if there is no selected item.\n\nCan be set, to change the selection.",
    "htmlselectelement-value": "Returns the value of the first selected item, if any, or the empty string if there is no selected item.\n\nCan be set, to change the selection.",
    "htmldatalistelement-options": "Returns an HTMLCollection of the option elements of the datalist element.",
    "htmloptionelement-selected": "Returns true if the element is selected, and false otherwise.\n\nCan be set, to override the current state of the element.",
    "htmloptionelement-index": "Returns the index of the element in its select element's options list.",
    "htmloptionelement-form": "Returns the element's form element, if any, or null otherwise.",
    "htmloptionelement-text": "Same as textContent, except that spaces are collapsed and script elements are skipped.",
    "option": "Returns a new option element.\n\nThe text argument sets the contents of the element.\n\nThe value argument sets the value attribute.\n\nThe defaultSelected argument sets the selected attribute.\n\nThe selected argument sets whether or not the element is selected. If it is omitted, even if the defaultSelected argument is true, the element is not selected.",
    "htmltextareaelement-type": "Returns the string \"textarea\".",
    "htmltextareaelement-value": "Returns the current value of the element.\n\nCan be set, to change the value.",
    "htmloutputelement-value": "Returns the element's current value.\n\nCan be set, to change the value.",
    "output-defaultvalue": "Returns the element's current default value.\n\nCan be set, to change the default value.",
    "htmloutputelement-type": "Returns the string \"output\".",
    "progress-position": "For a determinate progress bar (one with known current and maximum values), returns the result of dividing the current value by the maximum value.\n\nFor an indeterminate progress bar, returns âˆ’1.",
    "htmlfieldsetelement-type": "Returns the string \"fieldset\".",
    "htmlfieldsetelement-elements": "Returns an HTMLCollection of the form controls in the element.",
    "htmllegendelement-form": "Returns the element's form element, if any, or null otherwise.",
    "htmlobjectelement,htmlinputelement,htmlbuttonelement,htmlselectelement,htmltextareaelement,htmloutputelement-form": "Returns the element's form owner.\n\nReturns null if there isn't one.",
    "textarea": "Selects everything in the text control.",
    "cva-willvalidate": "Returns true if the element will be validated when the form is submitted; false otherwise.",
    "cva-setcustomvalidity": "Sets a custom error, so that the element would fail to validate. The given message is the message to be shown to the user when reporting the problem to the user.\n\nIf the argument is the empty string, clears the custom error.",
    "htmlobjectelement,htmlinputelement,htmlbuttonelement,htmlselectelement,htmltextareaelement-validity": "Returns true if the element has no value but is a required field; false otherwise.",
    "cva-checkvalidity": "Returns true if the element's value has no validity problems; false otherwise. Fires an invalid event at the element in the latter case.",
    "cva-reportvalidity": "Returns true if the element's value has no validity problems; otherwise, returns false, fires an invalid event at the element, and (if the event isn't canceled) reports the problem to the user.",
    "cva-validationmessage": "Returns the error message that would be shown to the user if the element was to be checked for validity.",
    "submitevent-submitter": "Returns the element representing the submit button that triggered the form submission, or null if the submission was not triggered by a button.",
    "formdataevent-formdata": "Returns a FormData object representing names and values of elements associated to the target form. Operations on the FormData object will affect form data to be submitted.",
    "htmldialogelement-show": "Displays the dialog element.",
    "dialog-showmodal": "Displays the dialog element and makes it the top-most modal dialog.\n\nThis method honors the autofocus attribute.",
    "htmldialogelement-close": "Closes the dialog element.\n\nThe argument, if provided, provides a return value.",
    "dialog-returnvalue": "Returns the dialog's return value.\n\nCan be set, to update the return value.",
    "htmlscriptelement-text": "Returns the child text content of the element.\n\nCan be set, to replace the element's children with the given value.",
    "htmltemplateelement-content": "Returns the template contents (a DocumentFragment).",
    "slot-name": "Can be used to get and set slot's name.",
    "slot-assignednodes": "Returns slot's assigned nodes.",
    "slot-assignedelements": "Returns slot's assigned nodes, limited to elements.",
    "canvas-getcontext": "Returns an object that exposes an API for drawing on the canvas. contextId specifies the desired API: \"2d\", \"bitmaprenderer\", \"webgl\", or \"webgl2\". options is handled by that API.\n\nThis specification defines the \"2d\" and \"bitmaprenderer\" contexts below. The WebGL specifications define the \"webgl\" and \"webgl2\" contexts. [WEBGL]\n\nReturns null if contextId is not supported, or if the canvas has already been initialized with another context type (e.g., trying to get a \"2d\" context after getting a \"webgl\" context).",
    "canvas-todataurl": "Returns a data: URL for the image in the canvas.\n\nThe first argument, if provided, controls the type of the image to be returned (e.g. PNG or JPEG). The default is \"image/png\"; that type is also used if the given type isn't supported. The second argument applies if the type is an image format that supports variable quality (such as \"image/jpeg\"), and is a number in the range 0.0 to 1.0 inclusive indicating the desired quality level for the resulting image.\n\nWhen trying to use types other than \"image/png\", authors can check if the image was really returned in the requested format by checking to see if the returned string starts with one of the exact strings \"data:image/png,\" or \"data:image/png;\". If it does, the image is PNG, and thus the requested type was not supported. (The one exception to this is if the canvas has either no height or no width, in which case the result might simply be \"data:,\".)",
    "canvas-toblob": "Creates a Blob object representing a file containing the image in the canvas, and invokes a callback with a handle to that object.\n\nThe second argument, if provided, controls the type of the image to be returned (e.g. PNG or JPEG). The default is \"image/png\"; that type is also used if the given type isn't supported. The third argument applies if the type is an image format that supports variable quality (such as \"image/jpeg\"), and is a number in the range 0.0 to 1.0 inclusive indicating the desired quality level for the resulting image.",
    "canvas-transfercontroltooffscreen": "Returns a newly created OffscreenCanvas object that uses the canvas element as a placeholder. Once the canvas element has become a placeholder for an OffscreenCanvas object, its intrinsic size can no longer be changed, and it cannot have a rendering context. The content of the placeholder canvas is updated by calling the commit() method of the OffscreenCanvas object's rendering context.",
    "canvasrenderingcontext2d-2d": "Returns the canvas element.",
    "context-2d": "Returns an object whose:\n\nalpha member is true if the context has an alpha channel, or false if it was forced to be opaque.\ndesynchronized member is true if the context can be desynchronized.",
    "canvasstate-2d": "Pushes the current state onto the stack.",
    "canvastextdrawingstyles-2d": "Returns the current font settings.\n\nCan be set, to change the font. The syntax is the same as for the CSS 'font' property; values that cannot be parsed as CSS font values are ignored.\n\nRelative keywords and lengths are computed relative to the font of the canvas element.",
    "canvaspath-2d": "Adds points to the subpath such that the arc described by the circumference of the circle described by the arguments, starting at the given start angle and ending at the given end angle, going in the given direction (defaulting to clockwise), is added to the path, connected to the previous point by a straight line.\n\nThrows an \"IndexSizeError\" DOMException if the given radius is negative.",
    "path2d": "Creates a new empty Path2D object.",
    "path2d-addpath": "Adds to the path the path given by the argument.",
    "canvastransform-2d": "Changes the current transformation matrix to apply a scaling transformation with the given characteristics.",
    "canvasgradient-addcolorstop": "Adds a color stop with the given color to the gradient at the given offset. 0.0 is the offset at one end of the gradient, 1.0 is the offset at the other end.\n\nThrows an \"IndexSizeError\" DOMException if the offset is out of range. Throws a \"SyntaxError\" DOMException if the color cannot be parsed.",
    "canvaspattern-settransform": "Sets the transformation matrix that will be used when rendering the pattern during a fill or stroke painting operation.",
    "textmetrics-width": "Returns the measurement described below.",
    "textmetrics-actualboundingboxleft": "Returns the measurement described below.",
    "textmetrics-actualboundingboxright": "Returns the measurement described below.",
    "textmetrics-fontboundingboxascent": "Returns the measurement described below.",
    "textmetrics-fontboundingboxdescent": "Returns the measurement described below.",
    "textmetrics-actualboundingboxascent": "Returns the measurement described below.",
    "textmetrics-actualboundingboxdescent": "Returns the measurement described below.",
    "textmetrics-emheightascent": "Returns the measurement described below.",
    "textmetrics-emheightdescent": "Returns the measurement described below.",
    "textmetrics-hangingbaseline": "Returns the measurement described below.",
    "textmetrics-alphabeticbaseline": "Returns the measurement described below.",
    "textmetrics-ideographicbaseline": "Returns the measurement described below.",
    "canvasdrawpath-2d": "Fills the subpaths of the current default path or the given path with the current fill style, obeying the given fill rule.",
    "imagedata": "Returns an ImageData object with the given dimensions. All the pixels in the returned object are transparent black.\n\nThrows an \"IndexSizeError\" DOMException if either of the width or height arguments are zero.",
    "imagedata-width": "Returns the actual dimensions of the data in the ImageData object, in pixels.",
    "imagedata-height": "Returns the actual dimensions of the data in the ImageData object, in pixels.",
    "imagedata-data": "Returns the one-dimensional array containing the data in RGBA order, as integers in the range 0 to 255.",
    "canvasfilters-2d": "Returns the current filter.\n\nCan be set, to change the filter. Values that cannot be parsed as a <filter-function-list> value are ignored.",
    "imagebitmaprenderingcontext-canvas": "Returns the canvas element that the context is bound to.",
    "imagebitmaprenderingcontext-transferfromimagebitmap": "Transfers the underlying bitmap data from imageBitmap to context, and the bitmap becomes the contents of the canvas element to which context is bound.",
    "offscreencanvas": "Returns a new OffscreenCanvas object that is not linked to a placeholder canvas element, and whose bitmap's size is determined by the width and height arguments.",
    "offscreencanvas-getcontext": "Returns an object that exposes an API for drawing on the OffscreenCanvas object. contextId specifies the desired API: \"2d\", \"bitmaprenderer\", \"webgl\", or \"webgl2\". options is handled by that API.\n\nThis specification defines the \"2d\" context below, which is similar but distinct from the \"2d\" context that is created from a canvas element. The WebGL specifications define the \"webgl\" and \"webgl2\" contexts. [WEBGL]\n\nReturns null if the canvas has already been initialized with another context type (e.g., trying to get a \"2d\" context after getting a \"webgl\" context).",
    "offscreencanvas-width": "These attributes return the dimensions of the OffscreenCanvas object's bitmap.\n\nThey can be set, to replace the bitmap with a new, transparent black bitmap of the specified dimensions (effectively resizing it).",
    "offscreencanvas-height": "These attributes return the dimensions of the OffscreenCanvas object's bitmap.\n\nThey can be set, to replace the bitmap with a new, transparent black bitmap of the specified dimensions (effectively resizing it).",
    "offscreencanvas-converttoblob": "Returns a promise that will fulfill with a new Blob object representing a file containing the image in the OffscreenCanvas object.\n\nThe argument, if provided, is a dictionary that controls the encoding options of the image file to be created. The type field specifies the file format and has a default value of \"image/png\"; that type is also used if the requested type isn't supported. If the image format supports variable quality (such as \"image/jpeg\"), then the quality field is a number in the range 0.0 to 1.0 inclusive indicating the desired quality level for the resulting image.",
    "offscreencanvas-transfertoimagebitmap": "Returns a newly created ImageBitmap object with the image in the OffscreenCanvas object. The image in the OffscreenCanvas object is replaced with a new blank image.",
    "window-customelements": "Defines a new custom element, mapping the given name to the given constructor as an autonomous custom element.",
    "attachinternals": "Returns an ElementInternals object targeting the custom element element. Throws an exception if element is not a custom element, if the \"internals\" feature was disabled as part of the element definition, or if it is called twice on the same element.",
    "elementinternals-shadowroot": "Returns the ShadowRoot for internals's target element, if the target element is a shadow host, or null otherwise.",
    "elementinternals-setformvalue": "Sets both the state and submission value of internals's target element to value.\n\nIf value is null, the element won't participate in form submission.",
    "elementinternals-form": "Returns the form owner of internals's target element.",
    "elementinternals-setvalidity": "Marks internals's target element as suffering from the constraints indicated by the flags argument, and sets the element's validation message to message. If anchor is specified, the user agent might use it to indicate problems with the constraints of internals's target element when the form owner is validated interactively or reportValidity() is called.",
    "elementinternals-willvalidate": "Returns true if internals's target element will be validated when the form is submitted; false otherwise.",
    "elementinternals-validity": "Returns the ValidityState object for internals's target element.",
    "elementinternals-validationmessage": "Returns the error message that would be shown to the user if internals's target element was to be checked for validity.",
    "elementinternals-checkvalidity": "Returns true if internals's target element has no validity problems; false otherwise. Fires an invalid event at the element in the latter case.",
    "elementinternals-reportvalidity": "Returns true if internals's target element has no validity problems; otherwise, returns false, fires an invalid event at the element, and (if the event isn't canceled) reports the problem to the user.",
    "elementinternals-labels": "Returns a NodeList of all the label elements that internals's target element is associated with.",
    "ElementInternals-accessibility": "Sets or retrieves the default ARIA role for internals's target element, which will be used unless the page author overrides it using the role attribute.",
    "click": "Acts as if the element was clicked.",
    "documentorshadowroot-activeelement": "Returns the deepest element in the document through which or to which key events are being routed. This is, roughly speaking, the focused element in the document.\n\nFor the purposes of this API, when a child browsing context is focused, its container is focused in the parent browsing context. For example, if the user moves the focus to a text control in an iframe, the iframe is the element returned by the activeElement API in the iframe's node document.\n\nSimilarly, when the focused element is in a different node tree than documentOrShadowRoot, the element returned will be the host that's located in the same node tree as documentOrShadowRoot if documentOrShadowRoot is a shadow-including inclusive ancestor of the focused element, and null if not.",
    "document-hasfocus": "Returns true if key events are being routed through or to the document; otherwise, returns false. Roughly speaking, this corresponds to the document, or a document nested inside this one, being focused.",
    "window-focus": "Moves the focus to the window's browsing context, if any.",
    "focus": "Moves the focus to the element.\n\nIf the element is a browsing context container, moves the focus to its nested browsing context instead.\n\nBy default, this method also scrolls the element into view. Providing the preventScroll option and setting it to true prevents this behavior.",
    "blur": "Moves the focus to the viewport. Use of this method is discouraged; if you want to focus the viewport, call the focus() method on the Document's document element.\n\nDo not use this method to hide the focus ring if you find the focus ring unsightly. Instead, use a CSS rule to override the 'outline' property, and provide a different way to show what element is focused. Be aware that if an alternative focusing style isn't made available, the page will be significantly less usable for people who primarily navigate pages using a keyboard, or those with reduced vision who use focus outlines to help them navigate the page.\n\nFor example, to hide the outline from links and instead use a yellow background to indicate focus, you could use:\n\n```\n:link:focus, :visited:focus { outline: none; background: yellow; color: black; }\n```",
    "contenteditable": "Returns \"true\", \"false\", or \"inherit\", based on the state of the contenteditable attribute.\n\nCan be set, to change that state.\n\nThrows a \"SyntaxError\" DOMException if the new value isn't one of those strings.",
    "iscontenteditable": "Returns true if the element is editable; otherwise, returns false.",
    "spellcheck": "Returns true if the element is to have its spelling and grammar checked; otherwise, returns false.\n\nCan be set, to override the default and set the spellcheck content attribute.",
    "autocapitalize": "Returns the current autocapitalization state for the element, or an empty string if it hasn't been set. Note that for input and textarea elements that inherit their state from a form element, this will return the autocapitalization state of the form element, but for an element in an editable region, this will not return the autocapitalization state of the editing host (unless this element is, in fact, the editing host).\n\nCan be set, to set the autocapitalize content attribute (and thereby change the autocapitalization behavior for the element).",
    "datatransfer": "Creates a new DataTransfer object with an empty drag data store.",
    "datatransfer-dropeffect": "Returns the kind of operation that is currently selected. If the kind of operation isn't one of those that is allowed by the effectAllowed attribute, then the operation will fail.\n\nCan be set, to change the selected operation.\n\nThe possible values are \"none\", \"copy\", \"link\", and \"move\".",
    "datatransfer-effectallowed": "Returns the kinds of operations that are to be allowed.\n\nCan be set (during the dragstart event), to change the allowed operations.\n\nThe possible values are \"none\", \"copy\", \"copyLink\", \"copyMove\", \"link\", \"linkMove\", \"move\", \"all\", and \"uninitialized\",",
    "datatransfer-items": "Returns a DataTransferItemList object, with the drag data.",
    "datatransfer-setdragimage": "Uses the given element to update the drag feedback, replacing any previously specified feedback.",
    "datatransfer-types": "Returns a frozen array listing the formats that were set in the dragstart event. In addition, if any files are being dragged, then one of the types will be the string \"Files\".",
    "datatransfer-getdata": "Returns the specified data. If there is no such data, returns the empty string.",
    "datatransfer-setdata": "Adds the specified data.",
    "datatransfer-cleardata": "Removes the data of the specified formats. Removes all data if the argument is omitted.",
    "datatransfer-files": "Returns a FileList of the files being dragged, if any.",
    "datatransferitemlist-length": "Returns the number of items in the drag data store.",
    "datatransferitemlist-remove": "Removes the indexth entry in the drag data store.",
    "datatransferitemlist-clear": "Removes all the entries in the drag data store.",
    "datatransferitemlist-add": "Adds a new entry for the given data to the drag data store. If the data is plain text then a type string has to be provided also.",
    "datatransferitem-kind": "Returns the drag data item kind, one of: \"string\", \"file\".",
    "datatransferitem-type": "Returns the drag data item type string.",
    "datatransferitem-getasstring": "Invokes the callback with the string data as the argument, if the drag data item kind is text.",
    "datatransferitem-getasfile": "Returns a File object, if the drag data item kind is File.",
    "dragevent-datatransfer": "Returns the DataTransfer object for the event.",
    "draggable": "Returns true if the element is draggable; otherwise, returns false.\n\nCan be set, to override the default and set the draggable content attribute.",
    "top": "Returns the WindowProxy for the top-level browsing context.",
    "opener": "Returns the WindowProxy for the opener browsing context.\n\nReturns null if there isn't one or if it has been set to null.\n\nCan be set to null.",
    "parent": "Returns the WindowProxy for the parent browsing context.",
    "frameelement": "Returns the Element for the browsing context container.\n\nReturns null if there isn't one, and in cross-origin situations.",
    "window": "These attributes all return window.",
    "frames": "These attributes all return window.",
    "self": "These attributes all return window.",
    "document-2": "Returns the Document associated with window.",
    "document-defaultview": "Returns the Window object of the active document.",
    "open": "Opens a window to show url (defaults to about:blank), and returns it. The target argument gives the name of the new window. If a window exists with that name already, it is reused. The features argument can be used to influence the rendering of the new window.",
    "name": "Returns the name of the window.\n\nCan be set, to change the name.",
    "window-close": "Closes the window.",
    "window-closed": "Returns true if the window has been closed, false otherwise.",
    "window-stop": "Cancels the document load.",
    "length": "Returns the number of document-tree child browsing contexts.",
    "window-locationbar": "Returns true if the location bar is visible; otherwise, returns false.",
    "window-menubar": "Returns true if the menu bar is visible; otherwise, returns false.",
    "window-personalbar": "Returns true if the personal bar is visible; otherwise, returns false.",
    "window-scrollbars": "Returns true if the scrollbars are visible; otherwise, returns false.",
    "window-statusbar": "Returns true if the status bar is visible; otherwise, returns false.",
    "window-toolbar": "Returns true if the toolbar is visible; otherwise, returns false.",
    "document-domain": "Returns the current domain used for security checks.\n\nCan be set to a value that removes subdomains, to change the origin's domain to allow pages on other subdomains of the same domain (if they do the same thing) to access each other. This enables pages on different hosts of a domain to synchronously access each other's DOMs.\n\nIn sandboxed iframes, Documents with opaque origins, Documents without a browsing context, and when the \"document-domain\" feature is disabled, the setter will throw a \"SecurityError\" exception. In cases where crossOriginIsolated or originAgentCluster return true, the setter will do nothing.",
    "originagentcluster": "Returns true if this Window belongs to an agent cluster which is origin-keyed, in the manner described in this section.",
    "history": "Returns the number of entries in the joint session history.",
    "document-location": "Returns a Location object with the current page's location.\n\nCan be set, to navigate to another page.",
    "location": "Returns a Location object with the current page's location.\n\nCan be set, to navigate to another page.",
    "location-href": "Returns the Location object's URL.\n\nCan be set, to navigate to the given URL.",
    "location-origin": "Returns the Location object's URL's origin.",
    "location-protocol": "Returns the Location object's URL's scheme.\n\nCan be set, to navigate to the same URL with a changed scheme.",
    "location-host": "Returns the Location object's URL's host and port (if different from the default port for the scheme).\n\nCan be set, to navigate to the same URL with a changed host and port.",
    "location-hostname": "Returns the Location object's URL's host.\n\nCan be set, to navigate to the same URL with a changed host.",
    "location-port": "Returns the Location object's URL's port.\n\nCan be set, to navigate to the same URL with a changed port.",
    "location-pathname": "Returns the Location object's URL's path.\n\nCan be set, to navigate to the same URL with a changed path.",
    "location-search": "Returns the Location object's URL's query (includes leading \"?\" if non-empty).\n\nCan be set, to navigate to the same URL with a changed query (ignores leading \"?\").",
    "location-hash": "Returns the Location object's URL's fragment (includes leading \"#\" if non-empty).\n\nCan be set, to navigate to the same URL with a changed fragment (ignores leading \"#\").",
    "location-assign": "Navigates to the given URL.",
    "location-replace": "Removes the current page from the session history and navigates to the given URL.",
    "location-reload": "Reloads the current page.",
    "location-ancestororigins": "Returns a DOMStringList object listing the origins of the ancestor browsing contexts, from the parent browsing context to the top-level browsing context.",
    "popstateevent-state": "Returns a copy of the information that was provided to pushState() or replaceState().",
    "hashchangeevent-oldurl": "Returns the URL of the session history entry that was previously current.",
    "hashchangeevent-newurl": "Returns the URL of the session history entry that is now current.",
    "pagetransitionevent-persisted": "For the pageshow event, returns false if the page is newly being loaded (and the load event will fire). Otherwise, returns true.\n\nFor the pagehide event, returns false if the page is going away for the last time. Otherwise, returns true, meaning that (if nothing conspires to make the page unsalvageable) the page might be reused if the user navigates back to this page.\n\nThings that can cause the page to be unsalvageable include:\n\nThe user agent decided to not keep the Document alive in a session history entry after unload\nHaving iframes that are not salvageable\nActive WebSocket objects\nAborting a Document",
    "issecurecontext": "Returns whether or not this global object represents a secure context. [SECURE-CONTEXTS]",
    "origin": "Returns the global object's origin, serialized as string.",
    "crossoriginisolated": "Returns whether scripts running in this global are allowed to use APIs that require cross-origin isolation. This depends on the `Cross-Origin-Opener-Policy` and `Cross-Origin-Embedder-Policy` HTTP response headers and the \"cross-origin-isolated\" feature.",
    "btoa": "Takes the input data, in the form of a Unicode string containing only characters in the range U+0000 to U+00FF, each representing a binary byte with values 0x00 to 0xFF respectively, and converts it to its base64 representation, which it returns.\n\nThrows an \"InvalidCharacterError\" DOMException exception if the input string contains any out-of-range characters.",
    "atob": "Takes the input data, in the form of a Unicode string containing base64-encoded binary data, decodes it, and returns a string consisting of characters in the range U+0000 to U+00FF, each representing a binary byte with values 0x00 to 0xFF respectively, corresponding to that binary data.\n\nThrows an \"InvalidCharacterError\" DOMException if the input string is not valid base64 data.",
    "document-open": "Causes the Document to be replaced in-place, as if it was a new Document object, but reusing the previous object, which is then returned.\n\nThe resulting Document has an HTML parser associated with it, which can be given data to parse using document.write().\n\nThe method has no effect if the Document is still being parsed.\n\nThrows an \"InvalidStateError\" DOMException if the Document is an XML document.\n\nThrows an \"InvalidStateError\" DOMException if the parser is currently executing a custom element constructor.",
    "document-close": "Closes the input stream that was opened by the document.open() method.\n\nThrows an \"InvalidStateError\" DOMException if the Document is an XML document.\n\nThrows an \"InvalidStateError\" DOMException if the parser is currently executing a custom element constructor.",
    "document-write": "In general, adds the given string(s) to the Document's input stream.\n\nThis method has very idiosyncratic behavior. In some cases, this method can affect the state of the HTML parser while the parser is running, resulting in a DOM that does not correspond to the source of the document (e.g. if the string written is the string \"<plaintext>\" or \"<!--\"). In other cases, the call can clear the current page first, as if document.open() had been called. In yet more cases, the method is simply ignored, or throws an exception. Users agents are explicitly allowed to avoid executing script elements inserted via this method. And to make matters even worse, the exact behavior of this method can in some cases be dependent on network latency, which can lead to failures that are very hard to debug. For all these reasons, use of this method is strongly discouraged.\n\nThrows an \"InvalidStateError\" DOMException when invoked on XML documents.\n\nThrows an \"InvalidStateError\" DOMException if the parser is currently executing a custom element constructor.",
    "document-writeln": "Adds the given string(s) to the Document's input stream, followed by a newline character. If necessary, calls the open() method implicitly first.\n\nThrows an \"InvalidStateError\" DOMException when invoked on XML documents.\n\nThrows an \"InvalidStateError\" DOMException if the parser is currently executing a custom element constructor.",
    "domparser-constructor": "Constructs a new DOMParser object.",
    "domparser-parsefromstring": "Parses string using either the HTML or XML parser, according to type, and returns the resulting Document. type can be \"text/html\" (which will invoke the HTML parser), or any of \"text/xml\", \"application/xml\", \"application/xhtml+xml\", or \"image/svg+xml\" (which will invoke the XML parser).\n\nFor the XML parser, if string cannot be parsed, then the returned Document will contain elements describing the resulting error.\n\nNote that script elements are not evaluated during parsing, and the resulting document's encoding will always be UTF-8.\n\nValues other than the above for type will cause a TypeError exception to be thrown.",
    "settimeout": "Schedules a timeout to run handler after timeout milliseconds. Any arguments are passed straight through to the handler.",
    "cleartimeout": "Cancels the timeout set with setTimeout() or setInterval() identified by handle.",
    "setinterval": "Schedules a timeout to run handler every timeout milliseconds. Any arguments are passed straight through to the handler.",
    "clearinterval": "Cancels the timeout set with setInterval() or setTimeout() identified by handle.",
    "queuemicrotask": "Queues a microtask to run the given callback.",
    "alert": "Displays a modal alert with the given message, and waits for the user to dismiss it.",
    "confirm": "Displays a modal OK/Cancel prompt with the given message, waits for the user to dismiss it, and returns true if the user clicks OK and false if the user clicks Cancel.",
    "prompt": "Displays a modal text control prompt with the given message, waits for the user to dismiss it, and returns the value that the user entered. If the user cancels the prompt, then returns null instead. If the second argument is present, then the given value is used as a default.",
    "print": "Prompts the user to print the page.",
    "navigator": "Returns the string \"Mozilla\".",
    "plugin-name": "Returns the plugin's name.",
    "plugin-description": "Returns the plugin's description.",
    "plugin-filename": "Returns the plugin library's filename, if applicable on the current platform.",
    "plugin-length": "Returns the number of MIME types, represented by MimeType objects, supported by the plugin.",
    "plugin-item": "Returns the specified MimeType object.",
    "mimetype-type": "Returns the MIME type.",
    "mimetype-description": "Returns the MIME type's description.",
    "mimetype-suffixes": "Returns the MIME type's typical file extensions, in a comma-separated list.",
    "mimetype-enabledplugin": "Returns the Plugin object that implements this MIME type.",
    "createimagebitmap": "Takes image, which can be an img element, an SVG image element, a video element, a canvas element, a Blob object, an ImageData object, or another ImageBitmap object, and returns a promise that is resolved when a new ImageBitmap is created.\n\nIf no ImageBitmap object can be constructed, for example because the provided image data is not actually an image, then the promise is rejected instead.\n\nIf sx, sy, sw, and sh arguments are provided, the source image is cropped to the given pixels, with any pixels missing in the original replaced by transparent black. These coordinates are in the source image's pixel coordinate space, not in CSS pixels.\n\nIf options is provided, the ImageBitmap object's bitmap data is modified according to options. For example, if the premultiplyAlpha option is set to \"premultiply\", the bitmap data's color channels are premultiplied by its alpha channel.\n\nRejects the promise with an \"InvalidStateError\" DOMException if the source image is not in a valid state (e.g., an img element that hasn't loaded successfully, an ImageBitmap object whose [[Detached]] internal slot value is true, an ImageData object whose data attribute value's [[ViewedArrayBuffer]] internal slot is detached, or a Blob whose data cannot be interpreted as a bitmap image).\n\nRejects the promise with a \"SecurityError\" DOMException if the script is not allowed to access the image data of the source image (e.g. a video that is CORS-cross-origin, or a canvas being drawn on by a script in a worker from another origin).",
    "imagebitmap-close": "Releases imageBitmap's underlying bitmap data.",
    "imagebitmap-width": "Returns the intrinsic width of the image, in CSS pixels.",
    "imagebitmap-height": "Returns the intrinsic height of the image, in CSS pixels.",
    "messageevent-data": "Returns the data of the message.",
    "messageevent-origin": "Returns the origin of the message, for server-sent events and cross-document messaging.",
    "messageevent-lasteventid": "Returns the last event ID string, for server-sent events.",
    "messageevent-source": "Returns the WindowProxy of the source window, for cross-document messaging, and the MessagePort being attached, in the connect event fired at SharedWorkerGlobalScope objects.",
    "messageevent-ports": "Returns the MessagePort array sent with the message, for cross-document messaging and channel messaging.",
    "eventsource": "Creates a new EventSource object.\n\nurl is a string giving the URL that will provide the event stream.\n\nSetting withCredentials to true will set the credentials mode for connection requests to url to \"include\".",
    "eventsource-close": "Aborts any instances of the fetch algorithm started for this EventSource object, and sets the readyState attribute to CLOSED.",
    "eventsource-url": "Returns the URL providing the event stream.",
    "eventsource-withcredentials": "Returns true if the credentials mode for connection requests to the URL providing the event stream is set to \"include\", and false otherwise.",
    "eventsource-readystate": "Returns the state of this EventSource object's connection. It can have the values described below.",
    "window-postmessage": "Posts a message to the given window. Messages can be structured objects, e.g. nested objects and arrays, can contain JavaScript values (strings, numbers, Date objects, etc), and can contain certain data objects such as File Blob, FileList, and ArrayBuffer objects.\n\nObjects listed in the transfer member of options are transferred, not just cloned, meaning that they are no longer usable on the sending side.\n\nA target origin can be specified using the targetOrigin member of options. If not provided, it defaults to \"/\". This default restricts the message to same-origin targets only.\n\nIf the origin of the target window doesn't match the given target origin, the message is discarded, to avoid information leakage. To send the message to the target regardless of origin, set the target origin to \"*\".\n\nThrows a \"DataCloneError\" DOMException if transfer array contains duplicate objects or if message could not be cloned.",
    "messagechannel": "Returns a new MessageChannel object with two new MessagePort objects.",
    "messagechannel-port1": "Returns the first MessagePort object.",
    "messagechannel-port2": "Returns the second MessagePort object.",
    "messageport-postmessage": "Posts a message through the channel. Objects listed in transfer are transferred, not just cloned, meaning that they are no longer usable on the sending side.\n\nThrows a \"DataCloneError\" DOMException if transfer contains duplicate objects or port, or if message could not be cloned.",
    "messageport-start": "Begins dispatching messages received on the port.",
    "messageport-close": "Disconnects the port, so that it is no longer active.",
    "broadcastchannel": "Returns a new BroadcastChannel object via which messages for the given channel name can be sent and received.",
    "broadcastchannel-name": "Returns the channel name (as passed to the constructor).",
    "broadcastchannel-postmessage": "Sends the given message to other BroadcastChannel objects set up for this channel. Messages can be structured objects, e.g. nested objects and arrays.",
    "broadcastchannel-close": "Closes the BroadcastChannel object, opening it up to garbage collection.",
    "workerglobalscope-self": "Returns workerGlobal.",
    "workerglobalscope-location": "Returns workerGlobal's WorkerLocation object.",
    "workerglobalscope-navigator": "Returns workerGlobal's WorkerNavigator object.",
    "workerglobalscope-importscripts": "Fetches each URL in urls, executes them one-by-one in the order they are passed, and then returns (or throws if something went amiss).",
    "dedicatedworkerglobalscope-name": "Returns dedicatedWorkerGlobal's name, i.e. the value given to the Worker constructor. Primarily useful for debugging.",
    "dedicatedworkerglobalscope-postmessage": "Clones message and transmits it to the Worker object associated with dedicatedWorkerGlobal. transfer can be passed as a list of objects that are to be transferred rather than cloned.",
    "dedicatedworkerglobalscope-close": "Aborts dedicatedWorkerGlobal.",
    "sharedworkerglobalscope-name": "Returns sharedWorkerGlobal's name, i.e. the value given to the SharedWorker constructor. Multiple SharedWorker objects can correspond to the same shared worker (and SharedWorkerGlobalScope), by reusing the same name.",
    "sharedworkerglobalscope-close": "Aborts sharedWorkerGlobal.",
    "worker": "Returns a new Worker object. scriptURL will be fetched and executed in the background, creating a new global environment for which worker represents the communication channel. options can be used to define the name of that global environment via the name option, primarily for debugging purposes. It can also ensure this new global environment supports JavaScript modules (specify type: \"module\"), and if that is specified, can also be used to specify how scriptURL is fetched through the credentials option.",
    "worker-terminate": "Aborts worker's associated global environment.",
    "worker-postmessage": "Clones message and transmits it to worker's global environment. transfer can be passed as a list of objects that are to be transferred rather than cloned.",
    "sharedworker": "Returns a new SharedWorker object. scriptURL will be fetched and executed in the background, creating a new global environment for which sharedWorker represents the communication channel. name can be used to define the name of that global environment.",
    "sharedworker-port": "Returns sharedWorker's MessagePort object which can be used to communicate with the global environment.",
    "worklet-addmodule": "Loads and executes the module script given by moduleURL into all of worklet's global scopes. It can also create additional global scopes as part of this process, depending on the worklet type. The returned promise will fulfill once the script has been successfully loaded and run in all global scopes.\n\nThe credentials option can be set to a credentials mode to modify the script-fetching process. It defaults to \"same-origin\".\n\nAny failures in fetching the script or its dependencies will cause the returned promise to be rejected with an \"AbortError\" DOMException. Any errors in parsing the script or its dependencies will cause the returned promise to be rejected with the exception generated during parsing.",
    "storage-length": "Returns the number of key/value pairs.",
    "storage-key": "Returns the name of the nth key, or null if n is greater than or equal to the number of key/value pairs.",
    "storage-getitem": "Returns the current value associated with the given key, or null if the given key does not exist.",
    "storage-setitem": "Sets the value of the pair identified by key to value, creating a new key/value pair if none existed for key previously.\n\nThrows a \"QuotaExceededError\" DOMException exception if the new value couldn't be set. (Setting could fail if, e.g., the user has disabled storage for the site, or if the quota has been exceeded.)\n\nDispatches a storage event on Window objects holding an equivalent Storage object.",
    "storage-removeitem": "Removes the key/value pair with the given key, if a key/value pair with the given key exists.\n\nDispatches a storage event on Window objects holding an equivalent Storage object.",
    "storage-clear": "Removes all key/value pairs, if there are any.\n\nDispatches a storage event on Window objects holding an equivalent Storage object.",
    "sessionstorage": "Returns the Storage object associated with that window's origin's session storage area.\n\nThrows a \"SecurityError\" DOMException if the Document's origin is an opaque origin or if the request violates a policy decision (e.g., if the user agent is configured to not allow the page to persist data).",
    "localstorage": "Returns the Storage object associated with window's origin's local storage area.\n\nThrows a \"SecurityError\" DOMException if the Document's origin is an opaque origin or if the request violates a policy decision (e.g., if the user agent is configured to not allow the page to persist data).",
    "storageevent-key": "Returns the key of the storage item being changed.",
    "storageevent-oldvalue": "Returns the old value of the key of the storage item whose value is being changed.",
    "storageevent-newvalue": "Returns the new value of the key of the storage item whose value is being changed.",
    "storageevent-url": "Returns the URL of the document whose storage item changed.",
    "storageevent-storagearea": "Returns the Storage object that was affected.",
    "track-none": "The text track not loaded state.",
    "track-loading": "The text track loading state.",
    "track-loaded": "The text track loaded state.",
    "track-error": "The text track failed to load state.",
    "texttrack-disabled": "The text track disabled mode.",
    "texttrack-hidden": "The text track hidden mode.",
    "texttrack-showing": "The text track showing mode.",
    "selectionmode-select": "Selects the newly inserted text.",
    "selectionmode-start": "Moves the selection to just before the inserted text.",
    "selectionmode-end": "Moves the selection to just after the selected text.",
    "selectionmode-preserve": "Attempts to preserve the selection. This is the default.",
    "binarytype-blob": "Binary data is returned in Blob form.",
    "binarytype-arraybuffer": "Binary data is returned in ArrayBuffer form."
}